import React, {Component} from 'react';
import {Link} from 'react-router-dom';

import api from "@malwarefront/api";
import { PagedList, View } from "@malwarefront/ui";

import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'
import { faUser, faRobot } from '@fortawesome/free-solid-svg-icons'

class ShowUsers extends Component {
    state = {
        users: [],
        activePage: 1,
        loginFilter: ''
    };

    handlePageChange = (pageNumber) => {
        this.setState({activePage: pageNumber});
    }

    handleFilterChange = (ev) => {
        const target = ev.target;
        this.setState({loginFilter: target.value, activePage: 1});
    }

    async componentDidMount() {
        this.setState({loginFilter: '', activePage: 1});
        try {
            let response = await api.getUsers()
            this.setState({"users": response.data.users});
        } catch(error) {
            this.setState({error})
        }
    }

    get items() {
        return this.state.users
                    .filter(f => f.login.toLowerCase().startsWith(this.state.loginFilter.toLowerCase()))
                    .sort((a, b) => {
                        if(a.login > b.login) return 1;
                        if(a.login < b.login) return -1;
                        return 0;
                    })
    }

    render() {
        return (
            <View fluid ident="showUsers" error={this.state.error}>
                <Link to="/users/new">
                    <button type="button" class="btn btn-success">
                        Register user
                    </button>
                </Link>
                <PagedList listItem={UserItem}
                           columnNames={["Login", "E-mail", "Feed quality", "Groups"]}
                           items={this.items.slice((this.state.activePage-1)*10, this.state.activePage*10)}
                           itemCount={this.items.length}
                           activePage={this.state.activePage}
                           filterValue={this.state.loginFilter}
                           onPageChange={this.handlePageChange}
                           onFilterChange={this.handleFilterChange} />
            </View>
        );
    }
}

export function UserLink(props) {
    return <Link to={`/user/${props.login}`}>{props.login}</Link>
}

function UserItem(props) {
    let groups = props.groups.filter(c => c.name !== "public")
    let feed_badge = <span className="badge badge-secondary"><FontAwesomeIcon icon={faUser} size="xs" /> {props.feed_quality}</span>;

    if (props.feed_quality === "low") {
        feed_badge = <span className="badge badge-danger"><FontAwesomeIcon icon={faRobot} size="xs" /> {props.feed_quality}</span>;
    }

    return (
        <tr>
            <td style={{textAlign: 'left'}}>
                <UserLink {...props}/>
            </td>
            <td>
                <a href={`mailto:${props.email}`}>{props.email}</a>
            </td>
            <td>
                {feed_badge}
            </td>
            <td>
                { 
                    groups.map((c, idx) => [<Link to={`/group/${c.name}`}>{c.name}</Link>, idx+1 < groups.length ? <span>, </span> : ""])
                }
            </td>
        </tr>
    );
}

export default ShowUsers;
