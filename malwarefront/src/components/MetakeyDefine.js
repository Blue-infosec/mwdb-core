import React, {Component} from 'react';

import api from "@malwarefront/api";
import { Alert } from "@malwarefront/ui";

class MetakeyDefine extends Component {
    constructor(props) {
        super(props);
        this.state = this.initialState;
    }

    get initialState() {
        return {
            metakey: '',
            template: ''
        }
    }

    componentDidMount() {
        if (this.dirty)
            this.setState(this.initialState);
    }

    handleInputChange = (event) => {
        const target = event.target;
        const value = target.type === 'checkbox' ? target.checked : target.value;
        const name = target.name;

        this.setState({
            [name]: value,
            dirty: true
        });
    }

    async defineMetakey() {
        try {
            await api.addMetakeyDefinition(this.state.metakey, this.state.template);
            this.setState({
                success: true
            });
        } catch(error) {
            this.setState({...this.initialState, error});
        }
    }

    handleSubmit = (event) => {
        event.preventDefault();
        this.defineMetakey();
    }

    render() {
        return (
            <div className="container">
                <Alert error={this.state.error} success={this.state.success && "Attribute registered successfully"}/>
                <h2>Define new attribute</h2>
                <form onSubmit={this.handleSubmit}>
                    <div className="form-group">
                        <label>Key</label>
                        <input type="text" name="metakey" value={this.state.metakey} onChange={this.handleInputChange}
                               className="form-control" required pattern="[A-Za-z0-9_-]{1,32}"
                               disabled={this.state.success}/>
                        <div class="form-hint">Metakey must contain only letters and digits, max 32 characters allowed.
                        </div>
                    </div>
                    <div className="form-group">
                        <label>URL template</label>
                        <input type="text" name="template" value={this.state.template}
                               onChange={this.handleInputChange} className="form-control"
                               disabled={this.state.success}/>
                        <div class="form-hint">Provide URL template for specified attribute with $value as placeholder (e.g. http://system.cert.pl/job/$value)</div>
                    </div>
                    <input type="submit" value="Submit" className="btn btn-primary"/>
                </form>
            </div>
        );
    }
}

export default MetakeyDefine;
