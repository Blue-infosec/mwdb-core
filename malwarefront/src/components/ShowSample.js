import React, {Component} from 'react';
import {Link} from 'react-router-dom';
import ShowObject from "./ShowObject";
import {ShowConfigBox} from "./ShowConfig";

import {FontAwesomeIcon} from '@fortawesome/react-fontawesome'
import api from "@malwarefront/api";
import {makeSearchLink, makeSearchDateLink} from "@malwarefront/helpers";
import { Identicon, DateString, Hash, View, Extendable } from "@malwarefront/ui";

class SamplePresenter extends Component {
    handleMalwareDownload = async (event) => {
        event.preventDefault();
        let response = await api.requestFileDownload(this.props.sha256)
        window.location.href = api.getApiForEnvironment().replace(/\/$/g, '') + response.data.url;
    };

    render() {
        return (
        <Extendable ident="showSamplePresenter" object={this.props}>
            <div className="card-header" style={{wordBreak: "break-all"}}>
                <div className="media row">
                    <Extendable ident="showSampleHeader" object={this.props}>
                        <div className="align-self-center mr-3">
                            <Identicon hash={this.props.md5} size="45" />
                        </div>
                        <div className="align-self-center media-body">
                            <h5 className="mt-0">{this.props.humanhash}</h5>
                        </div>
                        <div className="ml-3">
                            <Extendable ident="showSampleButtons" object={this.props}>
                                <Link to={`/relations?node[]=${this.props.sha256}`}>
                                    <button className="btn btn-primary" style={{"marginRight": "8pt"}}>
                                        <FontAwesomeIcon icon="project-diagram" pull="left" size="x"/>
                                        Relations
                                    </button>
                                </Link>
                                <Link to={`/preview/raw/${this.props.sha256}`}>
                                    <button className="btn btn-primary" style={{"marginRight": "8pt"}}>
                                        <FontAwesomeIcon icon="search" pull="left" size="x"/>
                                        Preview
                                    </button>
                                </Link>
                                <button onClick={this.handleMalwareDownload} target="_self" className="btn btn-primary">
                                    <FontAwesomeIcon icon="download" pull="left" size="x"/>
                                    Download sample
                                </button>
                            </Extendable>
                        </div>
                    </Extendable>
                </div>
            </div>
                <table className="table table-striped table-bordered table-hover file-table"
                       id="sample-table">
                    <tbody id="sample_body">
                    <Extendable ident="showSampleAttributes" object={this.props}>
                    <tr>
                        <th>Filename</th>
                        <td id="file_name"><a href={makeSearchLink("file.name", this.props.file_name)}>{this.props.file_name}</a>
                        </td>
                    </tr>
                    <tr>
                        <th>File size</th>
                        <td id="file_size"><a href={makeSearchLink("file.size", this.props.file_size)}>{this.props.file_size}</a>
                        </td>
                    </tr>
                    <tr>
                        <th>File type</th>
                        <td id="file_type"><a href={makeSearchLink("file.type", this.props.file_type)}>{this.props.file_type}</a>
                        </td>
                    </tr>
                    <tr>
                        <th>md5</th>
                        <td id="md5"><Hash hash={this.props.md5}/></td>
                    </tr>
                    <tr>
                        <th>sha1</th>
                        <td id="sha1"><Hash hash={this.props.sha1}/></td>
                    </tr>
                    <tr>
                        <th>sha256</th>
                        <td id="sha256"><Hash hash={this.props.sha256}/></td>
                    </tr>
                    <tr>
                        <th>sha512</th>
                        <td id="sha512"><Hash hash={this.props.sha512}/></td>
                    </tr>
                    <tr>
                        <th>crc32</th>
                        <td id="crc32" className="text-monospace">{this.props.crc32}</td>
                    </tr>
                    <tr>
                        <th>ssdeep</th>
                        <td id="ssdeep" className="text-monospace"><a
                            href={makeSearchLink("file.ssdeep",this.props.ssdeep)}>{this.props.ssdeep}</a></td>
                    </tr>
                    <tr>
                        <th>Upload time</th>
                        <td id="upload_time"> {
                            this.props.upload_time
                                ? <a href={makeSearchDateLink("file.upload_time", this.props.upload_time)}><DateString date={this.props.upload_time}/></a>
                                : []
                        }</td>
                    </tr>
                    </Extendable>
                    </tbody>
                </table>
        </Extendable>)
    }
}

class ShowSample extends Component {
    state = {
        error: null,
        file: {
            children: []
        }
    };

    async updateSample() {
        try {
            let response = await api.getObject("file", this.props.match.params.hash)
            this.setState({
                file: response.data
            });
        } catch(error) {
            this.setState({error});
        }
    }

    componentDidMount() {
        this.updateSample()
    }

    componentDidUpdate(prevProps) {
        if (prevProps !== this.props)
            this.updateSample();
    };

    render() {
        return (
            <View fluid ident="showSample" error={this.state.error}>
                <ShowObject object={this.state.file} objectPresenterComponent={SamplePresenter}>
                    {
                        this.state.file.latest_config
                            ? <ShowConfigBox config={this.state.file.latest_config}
                                             objectOnly
                                             header={<Link to={`/config/${this.state.file.latest_config.id}`}>Latest static config</Link>} />
                            : []
                    }
                </ShowObject>
            </View>
        );
    }
}

export default ShowSample;
